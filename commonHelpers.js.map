{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.getElementById('datetime-picker');\ninput.classList.add('input');\n\nconst button = document.querySelector('button');\nbutton.classList.add('btn-start');\nbutton.disabled = true;\n\nconst daysElem = document.querySelector('[data-days]');\nconst hoursElem = document.querySelector('[data-hours]');\nconst minutesElem = document.querySelector('[data-minutes]');\nconst secondsElem = document.querySelector('[data-seconds]');\n\nfunction formatTime(currentValue) {\n  let date = currentValue;\n\n  let year = String(date.getFullYear()).padStart(2, '0');\n  let month = String(date.getMonth() + 1).padStart(2, '0');\n  let day = String(date.getDate()).padStart(2, '0');\n  let houres = String(date.getHours()).padStart(2, '0');\n  let minutes = String(date.getMinutes()).padStart(2, '0');\n  let sec = String(date.getSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day} ${houres}:${minutes}:${sec}`;\n}\n\ninput.value = formatTime(new Date());\n\nlet diffDate;\nlet userSelectedDate;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    let currentTime = Date.now();\n    diffDate = userSelectedDate - currentTime;\n    if (diffDate > 0) {\n      button.disabled = false;\n      button.classList.add('btn-normal');\n    } else {\n      button.disabled = true;\n      button.classList.remove('btn-normal');\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        // class: 'iziToast-body',\n        messageSize: '16px',\n        messageWeight: '400',\n        // messageLineHeight: '1.5',\n        backgroundColor: '#ef4040',\n        // messageColor: '#fff',\n        position: 'topRight',\n\n        messageColor: 'white',\n        // position: 'topRight',\n        // // transitionIn: 'bounceInDown',\n        // // timeout: 3000,\n        // maxWidth: '302px',\n        // // zindex: 999,\n        // // close: false,\n        iconUrl: '../img/error.svg',\n      });\n    }\n  },\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener('click', startTimer);\n\nclass Time {\n  constructor(clock) {\n    this.idInterval = null;\n    this.clock = clock;\n  }\n\n  start() {\n    this.idInterval = setInterval(() => {\n      let currentTime = Date.now();\n      diffDate = userSelectedDate - currentTime;\n      if (diffDate > 0) {\n        this.clock();\n      } else {\n        console.log('Choose a date in the future!');\n        clearInterval(this.idInterval);\n        input.disabled = false;\n      }\n    }, 1000);\n  }\n}\n\nfunction addLeadingZero() {\n  let objDataDate = convertMs(diffDate);\n  let { days, hours, minutes, seconds } = objDataDate;\n\n  daysElem.textContent = days.toString().padStart(2, '0');\n  hoursElem.textContent = hours.toString().padStart(2, '0');\n  minutesElem.textContent = minutes.toString().padStart(2, '0');\n  secondsElem.textContent = seconds.toString().padStart(2, '0');\n}\n\nconst timer = new Time(addLeadingZero);\n\nfunction startTimer() {\n  timer.start();\n  input.disabled = true;\n  button.disabled = true;\n  button.classList.remove('btn-normal');\n}\n"],"names":["input","button","daysElem","hoursElem","minutesElem","secondsElem","formatTime","currentValue","date","year","month","day","houres","minutes","sec","diffDate","userSelectedDate","flatpickr","selectedDates","currentTime","iziToast","convertMs","ms","days","hours","seconds","startTimer","Time","clock","addLeadingZero","objDataDate","timer"],"mappings":"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"}