{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.getElementById('datetime-picker');\ninput.classList.add('input');\n\nconst button = document.querySelector('button');\nbutton.classList.add('btn-start');\n\nconst daysElem = document.querySelector('[data-days]');\nconst hoursElem = document.querySelector('[data-hours]');\nconst minutesElem = document.querySelector('[data-minutes]');\nconst secondsElem = document.querySelector('[data-seconds]');\n\nfunction formatTime(currentValue) {\n  let date = currentValue;\n\n  let year = String(date.getFullYear()).padStart(2, '0');\n  let month = String(date.getMonth() + 1).padStart(2, '0');\n  let day = String(date.getDate()).padStart(2, '0');\n  let houres = String(date.getHours()).padStart(2, '0');\n  let minutes = String(date.getMinutes()).padStart(2, '0');\n  let sec = String(date.getSeconds()).padStart(2, '0');\n  let currentDate = `${year}-${month}-${day} ${houres}:${minutes}:${sec}`;\n  // let arrDate = [year, month, day, houres, minutes, sec];\n  return currentDate;\n}\n\n// const dateInput = formatTime(new Date());\n// const [year, month, day, houres, minutes, sec] = dateInput;\n// input.value = `${year}-${month}-${day} ${houres}:${minutes}:${sec}`;\ninput.value = formatTime(new Date());\n\nlet diffDate; // = futureDate - currentTime;\nlet userSelectedDate;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    // console.log(selectedDates[0]);\n  },\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  // console.log({ days, hours, minutes, seconds });\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(20000));\n\nbutton.addEventListener('click', startTimer);\n\nclass Time {\n  constructor(clock) {\n    this.idInterval = null;\n    this.clock = clock;\n  }\n\n  start() {\n    this.idInterval = setInterval(() => {\n      let currentTime = Date.now();\n      diffDate = userSelectedDate - currentTime;\n      if (diffDate > 0) {\n        this.clock();\n        // setTimeout(() => {\n        //   clearInterval(this.idInterval);\n        //   // console.log('Stop');\n        // }, 50000);\n      } else {\n        console.log('Choose date in the future!');\n        clearInterval(this.idInterval);\n      }\n    }, 1000);\n    // setTimeout(() => {\n    //   clearInterval(this.idInterval);\n    //   console.log('Stop');\n    // }, 6000);\n  }\n}\n\nfunction test() {\n  let objDataDate = convertMs(diffDate);\n  let { days, hours, minutes, seconds } = objDataDate;\n  days = days.toString().padStart(2, '0');\n  hours = hours.toString().padStart(2, '0');\n  minutes = minutes.toString().padStart(2, '0');\n  seconds = seconds.toString().padStart(2, '0');\n\n  daysElem.textContent = days;\n  hoursElem.textContent = hours;\n  minutesElem.textContent = minutes;\n  secondsElem.textContent = seconds;\n}\n\nlet timer = new Time(test);\n\nfunction startTimer() {\n  timer.start();\n}\n\n// function formatTime() {}\n"],"names":["input","button","daysElem","hoursElem","minutesElem","secondsElem","formatTime","currentValue","date","year","month","day","houres","minutes","sec","diffDate","userSelectedDate","flatpickr","selectedDates","convertMs","ms","days","hours","seconds","startTimer","Time","clock","currentTime","test","objDataDate","timer"],"mappings":"oGAQA,MAAMA,EAAQ,SAAS,eAAe,iBAAiB,EACvDA,EAAM,UAAU,IAAI,OAAO,EAE3B,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAU,IAAI,WAAW,EAEhC,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,SAASC,EAAWC,EAAc,CAChC,IAAIC,EAAOD,EAEPE,EAAO,OAAOD,EAAK,YAAa,CAAA,EAAE,SAAS,EAAG,GAAG,EACjDE,EAAQ,OAAOF,EAAK,SAAQ,EAAK,CAAC,EAAE,SAAS,EAAG,GAAG,EACnDG,EAAM,OAAOH,EAAK,QAAS,CAAA,EAAE,SAAS,EAAG,GAAG,EAC5CI,EAAS,OAAOJ,EAAK,SAAU,CAAA,EAAE,SAAS,EAAG,GAAG,EAChDK,EAAU,OAAOL,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EACnDM,EAAM,OAAON,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EAGnD,MAFkB,GAAGC,CAAI,IAAIC,CAAK,IAAIC,CAAG,IAAIC,CAAM,IAAIC,CAAO,IAAIC,CAAG,EAGvE,CAKAd,EAAM,MAAQM,EAAW,IAAI,IAAM,EAEnC,IAAIS,EACAC,EAEJC,EAAUjB,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQkB,EAAe,CACrBF,EAAmBE,EAAc,CAAC,CAEnC,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACjDG,EAAU,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAT,EAAS,QAAAU,CAAO,CACxC,CAIAtB,EAAO,iBAAiB,QAASuB,CAAU,EAE3C,MAAMC,CAAK,CACT,YAAYC,EAAO,CACjB,KAAK,WAAa,KAClB,KAAK,MAAQA,CACd,CAED,OAAQ,CACN,KAAK,WAAa,YAAY,IAAM,CAClC,IAAIC,EAAc,KAAK,MACvBZ,EAAWC,EAAmBW,EAC1BZ,EAAW,EACb,KAAK,MAAK,GAMV,QAAQ,IAAI,4BAA4B,EACxC,cAAc,KAAK,UAAU,EAEhC,EAAE,GAAI,CAKR,CACH,CAEA,SAASa,GAAO,CACd,IAAIC,EAAcV,EAAUJ,CAAQ,EAChC,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAT,EAAS,QAAAU,CAAO,EAAKM,EACxCR,EAAOA,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACtCC,EAAQA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACxCT,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5CU,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAE5CrB,EAAS,YAAcmB,EACvBlB,EAAU,YAAcmB,EACxBlB,EAAY,YAAcS,EAC1BR,EAAY,YAAckB,CAC5B,CAEA,IAAIO,EAAQ,IAAIL,EAAKG,CAAI,EAEzB,SAASJ,GAAa,CACpBM,EAAM,MAAK,CACb"}