{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.getElementById('datetime-picker');\ninput.classList.add('input');\n\nconst button = document.querySelector('button');\nbutton.classList.add('btn-start');\n\nfunction formatTime(CurDate) {\n  let date = CurDate;\n  let year = date.getFullYear();\n  //   let year = String(date.getFullYear()).padStart(2, '0');\n  let month = String(date.getMonth() + 1).padStart(2, '0');\n  let day = String(date.getDate()).padStart(2, '0');\n  let houre = String(date.getHours()).padStart(2, '0');\n  let min = String(date.getMinutes()).padStart(2, '0');\n  let sec = String(date.getSeconds()).padStart(2, '0');\n  let currentDate = `${year}-${month}-${day} ${houre}:${min}:${sec}`;\n  return currentDate;\n}\n\ninput.value = formatTime(new Date());\n\nfunction formatMillisecondsToDate(milliseconds) {\n  // Create a new Date object with milliseconds\n  let date = new Date(milliseconds);\n\n  // Extract date and time components\n  let year = date.getFullYear();\n  let month = String(date.getMonth() + 1).padStart(2, '0'); // Adding 1 because months are zero-based\n  let day = String(date.getDate()).padStart(2, '0');\n  let hours = String(date.getHours()).padStart(2, '0');\n  let minutes = String(date.getMinutes()).padStart(2, '0');\n  let seconds = String(date.getSeconds()).padStart(2, '0');\n\n  // Construct the formatted date and time string\n  let formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n\n  return formattedDate;\n}\n\n// Example usage:\n// let milliseconds = 123456789; // This could be the difference you calculated: Date.now() - date;\n// let formattedDateTime = formatMillisecondsToDate(milliseconds);\n// console.log('Formatted Date and Time:', formattedDateTime);\n\n// console.log('currentDate ', currentDate);\n// console.log(date.getTime());  disabled to add button\n\nbutton.addEventListener('click', startTimer);\n\nclass Time {\n  constructor(clock) {\n    this.idInterval = null;\n    this.clock = clock;\n  }\n\n  start(str) {\n    let currentTime = Date.now();\n    this.idInterval = setInterval(() => {\n      let diff = Date.now() - currentTime;\n      console.log(formatTime(Date.now(diff)));\n      this.clock();\n    }, 1000);\n    setTimeout(() => {\n      clearInterval(this.idInterval);\n      console.log('Stop');\n    }, 6000);\n  }\n}\n\nfunction test() {\n  console.log('Hello');\n}\n\nlet timer = new Time(test);\n\nfunction startTimer() {\n  timer.start();\n}\n"],"names":["input","button","formatTime","CurDate","date","year","month","day","houre","min","sec","startTimer","Time","clock","str","currentTime","diff","test","timer"],"mappings":"wFAQA,MAAMA,EAAQ,SAAS,eAAe,iBAAiB,EACvDA,EAAM,UAAU,IAAI,OAAO,EAE3B,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAU,IAAI,WAAW,EAEhC,SAASC,EAAWC,EAAS,CAC3B,IAAIC,EAAOD,EACPE,EAAOD,EAAK,cAEZE,EAAQ,OAAOF,EAAK,SAAQ,EAAK,CAAC,EAAE,SAAS,EAAG,GAAG,EACnDG,EAAM,OAAOH,EAAK,QAAS,CAAA,EAAE,SAAS,EAAG,GAAG,EAC5CI,EAAQ,OAAOJ,EAAK,SAAU,CAAA,EAAE,SAAS,EAAG,GAAG,EAC/CK,EAAM,OAAOL,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EAC/CM,EAAM,OAAON,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EAEnD,MADkB,GAAGC,CAAI,IAAIC,CAAK,IAAIC,CAAG,IAAIC,CAAK,IAAIC,CAAG,IAAIC,CAAG,EAElE,CAEAV,EAAM,MAAQE,EAAW,IAAI,IAAM,EA4BnCD,EAAO,iBAAiB,QAASU,CAAU,EAE3C,MAAMC,CAAK,CACT,YAAYC,EAAO,CACjB,KAAK,WAAa,KAClB,KAAK,MAAQA,CACd,CAED,MAAMC,EAAK,CACT,IAAIC,EAAc,KAAK,MACvB,KAAK,WAAa,YAAY,IAAM,CAClC,IAAIC,EAAO,KAAK,IAAG,EAAKD,EACxB,QAAQ,IAAIb,EAAW,KAAK,IAAIc,CAAI,CAAC,CAAC,EACtC,KAAK,MAAK,CACX,EAAE,GAAI,EACP,WAAW,IAAM,CACf,cAAc,KAAK,UAAU,EAC7B,QAAQ,IAAI,MAAM,CACnB,EAAE,GAAI,CACR,CACH,CAEA,SAASC,GAAO,CACd,QAAQ,IAAI,OAAO,CACrB,CAEA,IAAIC,EAAQ,IAAIN,EAAKK,CAAI,EAEzB,SAASN,GAAa,CACpBO,EAAM,MAAK,CACb"}